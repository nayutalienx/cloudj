<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CloudJ.API</name>
    </assembly>
    <members>
        <member name="M:CloudJ.API.Controllers.BillingController.MakeOrderAsync(CloudJ.Contracts.DTOs.OrderDtos.NewOrderDto)">
            <summary>
            Сделать заказ
            </summary>
            <param name="order"></param>
            <returns></returns>
        </member>
        <member name="M:CloudJ.API.Controllers.BillingController.GetAllOrdersAsync">
            <summary>
            Получить все заказы
            </summary>
            <returns></returns>
        </member>
        <member name="M:CloudJ.API.Controllers.BillingController.GetOrdersByFilterAsync(CloudJ.Contracts.DTOs.OrderDtos.OrderFilter)">
            <summary>
            Получить заказы по фильтру
            </summary>
            <param name="filter"></param>
            <returns></returns>
        </member>
        <member name="M:CloudJ.API.Controllers.SolutionController.GetAllSolutionsAsync">
            <summary>
            Получить все решения    
            </summary>
            <returns></returns>
        </member>
        <member name="M:CloudJ.API.Controllers.SolutionController.AddSolutionAsync(CloudJ.Contracts.DTOs.SolutionDtos.Solution.NewSolutionDto)">
            <summary>
            Добавить решение
            </summary>
            <param name="solution"></param>
            <returns></returns>
        </member>
        <member name="M:CloudJ.API.Controllers.SolutionController.DeleteSolutionAsync(CloudJ.Contracts.DTOs.SolutionDtos.Solution.RemoveSolutionDto)">
            <summary>
            Удалить решение
            </summary>
            <param name="solution"></param>
            <returns></returns>
        </member>
        <member name="M:CloudJ.API.Controllers.SolutionController.AddCategoryAsync(CloudJ.Contracts.DTOs.SolutionDtos.Category.NewCategoryDto)">
            <summary>
            Добавить категорию
            </summary>
            <param name="category"></param>
            <returns></returns>
        </member>
        <member name="M:CloudJ.API.Controllers.SolutionController.UpdateAsync(CloudJ.Contracts.DTOs.SolutionDtos.Solution.UpdateSolutionDto)">
            <summary>
            Обновить решение
            </summary>
            <param name="solution"></param>
            <returns></returns>
        </member>
        <member name="M:CloudJ.API.Controllers.SolutionController.GetAllCategoriesAsync">
            <summary>
            Получить все категории
            </summary>
            <returns></returns>
        </member>
        <member name="M:CloudJ.API.Controllers.SolutionController.AddSolutionLinkAsync(CloudJ.Contracts.DTOs.SolutionDtos.Solution.NewSolutionLinkDto)">
            <summary>
            Добавить ссылку на решение
            </summary>
            <param name="link"></param>
            <returns></returns>
        </member>
        <member name="M:CloudJ.API.Controllers.SolutionController.AddSolutionPlanAsync(CloudJ.Contracts.DTOs.SolutionDtos.Plan.NewPlanDto)">
            <summary>
            Добавить тарифный план для решения
            </summary>
            <param name="plan"></param>
            <returns></returns>
        </member>
        <member name="M:CloudJ.API.Controllers.SolutionController.AddSolutionReviewAsync(CloudJ.Contracts.DTOs.SolutionDtos.Review.NewReviewDto)">
            <summary>
            Добавление отзыва к решению
            </summary>
            <param name="review"></param>
            <returns></returns>
        </member>
        <member name="M:CloudJ.API.Controllers.SolutionController.GetSolutionsByFilterAsync(CloudJ.Contracts.DTOs.SolutionDtos.Solution.SolutionFilter)">
            <summary>
            Получить решения по фильтру
            </summary>
            <param name="filter"></param>
            <returns></returns>
        </member>
        <member name="M:CloudJ.API.ExtensionMethods.CreateDatabase``1(Microsoft.AspNetCore.Hosting.IWebHost)">
            <summary>  
            Migrates the database.  
            </summary>  
            <typeparam name="T"></typeparam>  
            <param name="webHost">The web host.</param>  
            <returns>IWebHost.</returns>  
        </member>
    </members>
</doc>
